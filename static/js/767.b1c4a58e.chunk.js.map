{"version":3,"file":"static/js/767.b1c4a58e.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/@nextui-org/dom-animation/dist/index.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs"],"sourcesContent":["function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant, noop } from 'motion-utils';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant, noop } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from 'motion-utils';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from 'motion-utils';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.15.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (!onHoverEnd || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return focusableElements.has(element.tagName) || element.tabIndex !== -1;\n}\n\nexport { isElementKeyboardAccessible };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (onPressEnd) {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element)) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.15.0\", `Attempting to mix Motion versions ${nextValue.version} with 11.15.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","\"use client\";\n\n// src/index.ts\nimport { domAnimation } from \"framer-motion\";\nvar src_default = domAnimation;\nexport {\n  src_default as default\n};\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n"],"names":["shallowCompare","next","prev","Array","isArray","prevLength","length","i","resolveVariant","visualElement","definition","custom","props","getProps","resolveVariantFromProps","undefined","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","transformProps","has","startsWith","Math","sqrt","getValueTransition","transition","key","instantAnimationState","isNotNull","value","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","v","test","isNumericalString","splitCSSVariableRegex","getVariableValue","current","element","depth","arguments","invariant","concat","token","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","trim","parseFloat","isCSSVariableToken","positionalKeys","Set","isNumOrPxType","number","px","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","transform","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","positionalValues","width","_ref2","_ref3","paddingLeft","paddingRight","max","min","height","_ref4","_ref5","y","paddingTop","paddingBottom","top","_ref6","left","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","percent","degrees","vw","vh","parse","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","Map","forEach","removedTransforms","getValue","push","get","set","removeNonTranslationalTransform","render","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","clear","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","this","isComplete","scheduleResolve","add","frame","read","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","delete","cancel","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","alpha","rgbUnit","_objectSpread","clamp","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","unit","defaultValue","functionRegex","functions","join","defaultValueTypes","numberValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","now","clearTime","time","frameData","isProcessing","MotionGlobalConfig","useManualTiming","timestamp","performance","newTime","queueMicrotask","isAnimatable","canAnimate","velocity","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","options","_objectWithoutProperties","_excluded","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","Promise","progress","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","mass","bounce","visualDuration","granular","default","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","maxGeneratorDuration","calcGeneratorDuration","generator","state","done","Infinity","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","_len","transformers","_key","reduce","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","update","passTimestamp","start","stop","cancelFrame","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","callback","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","_this$options","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","_this$options2","_excluded2","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","getVelocity","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","SubscriptionManager","handler","item","indexOf","removeItem","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","optimizedAppearDataAttribute","addValueToWillChange","willChange","isMotionValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","resolveFinalValueInKeyframes","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","variantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","isVariantLabel","reversePriorityOrder","variantPriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","isPressing","WeakSet","firePointerEvent","dispatchEvent","PointerEvent","isPrimary","bubbles","focusableElements","isNodeOrChild","parentElement","isValidPressEvent","button","isPrimaryPointer","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","extractEventInfo","point","pageX","pageY","handleHoverEvent","lifecycle","postRender","addDomEvent","handlePressEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","instance","transformPoint","convertBoundingBoxToBox","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","createBox","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","reducedMotionConfig","visualState","children","isVariantNode","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","isBrowser","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","remove","feature","valueIsTransform","removeOnChange","latestValue","preRender","isTransformDirty","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","updateFeatures","featureDefinitions","featureDefinition","isEnabled","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getTransformPagePoint","transformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","args","DOMVisualElement","compareDocumentPosition","vars","childSubscription","textContent","HTMLVisualElement","renderHTML","defaultType","computedStyle","isCSSVariableName","buildHTMLStyles","SVGVisualElement","isSVGTag","camelCaseAttributes","camelToDash","getAttribute","buildSVGAttrs","styleProp","renderSVG","src_default","renderer","createDomVisualElement","Component","isSVGComponent","allowProjection","Fragment"],"sourceRoot":""}